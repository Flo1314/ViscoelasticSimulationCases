/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  7.0                                   |
|   \\  /    A nd           | Website:  https://openfoam.org                  |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.1; //mm -> cm

vertices
(
  (0     0   0.25) // 0
  (0     1   0.25) // 1
  (0     4   0.25) // 2
  (15    4   0.25) // 3
  (15    1   0.25) // 4
  (15.25 1   0.25) // 5
  (15.25 1.5 0.25) // 6
  (30    1.5 0.25) // 7
  (30    1   0.25) // 8
  (30    0   0.25) // 9
  (15.25 0   0.25) // 10
  (15    0   0.25) // 11

  (0     0   -0.25) // 12
  (0     1   -0.25) // 13
  (0     4   -0.25) // 14
  (15    4   -0.25) // 15
  (15    1   -0.25) // 16
  (15.25 1   -0.25) // 17
  (15.25 1.5 -0.25) // 18
  (30    1.5 -0.25) // 19
  (30    1   -0.25) // 20
  (30    0   -0.25) // 21
  (15.25 0   -0.25) // 22
  (15    0   -0.25) // 23


);

blocks
(                            // (x z y)
    hex (0 11 23 12 1 4 16 13) (300 1 20) simpleGrading (1 1 1)
    hex (1 4 16 13 2 3 15 14) (300 1 60) simpleGrading (1 1 1)
    hex (11 10 22 23 4 5 17 16) (5 1 20) simpleGrading (1 1 1)
    hex (10 9 21 22 5 8 20 17) (295 1 20) simpleGrading (1 1 1)
    hex (5 8 20 17 6 7 19 18) (295  1 10) simpleGrading (1 1 1)
);

edges
(
);

boundary
(

    inlet
    {
        type patch;
        faces
        (
	    (1 13 12 0)
            (2 14 13 1)
        );
    }

    outlet
    {
        type patch;
        faces
        (
            (20 8 9 21)
	    (19 7 8 20)
        );
    }

    walls
    {
        type wall;
        faces
        (
            (2 3 15 14)
            (15 3 4 16)
            (4 5 17 16)
	    (6 18 17 5)
	    (6 7 19 18)
        );
    }
  
    bottom
    {
        type symmetryPlane;
        faces
        (
            (12 23 11 0)
            (23 22 10 11)
	    (22 21 9 10)
        );
    }  
 
   frontAndBack
    {
        type empty;
        faces
        (
            (3 2 1 4)
            (14 15 16 13)
            (4 1 0 11)
            (13 16 12 23)
            (5 4 11 10)
            (16 17 23 22)
            (7 6 5 8)
            (18 19 20 17)
            (8 5 10 9)
            (17 20 21 22)
        );
    }   
);

mergePatchPairs
(
);

// ************************************************************************* //
